#!/usr/bin/env node

/**
 * üîí SCRIPT DE INICIALIZA√á√ÉO AUTOM√ÅTICA - Aquecedor Turbo
 * Garante que o sistema sempre inicie corretamente, mesmo ap√≥s resets
 */

import { execSync } from 'child_process';

console.log('üöÄ INICIALIZANDO AQUECEDOR TURBO - Auto Setup');

// Fun√ß√£o para executar comandos de forma segura
function runCommand(command, description) {
  try {
    console.log(`üîß ${description}...`);
    const result = execSync(command, { stdio: 'inherit', encoding: 'utf8' });
    console.log(`‚úÖ ${description} - Conclu√≠do`);
    return true;
  } catch (error) {
    console.error(`‚ùå ${description} - ERRO:`, error.message);
    return false;
  }
}

// Verificar se DATABASE_URL existe
function checkDatabaseUrl() {
  if (process.env.DATABASE_URL) {
    console.log('‚úÖ DATABASE_URL encontrado no ambiente');
    return true;
  }
  
  // Verificar vari√°veis PG individuais
  const { PGHOST, PGPORT, PGUSER, PGPASSWORD, PGDATABASE } = process.env;
  if (PGHOST && PGPORT && PGUSER && PGPASSWORD && PGDATABASE) {
    console.log('‚úÖ Vari√°veis PostgreSQL individuais encontradas');
    return true;
  }
  
  console.log('‚ùå DATABASE_URL n√£o encontrado - ser√° criado automaticamente');
  return false;
}

async function main() {
  console.log('üîç Verificando configura√ß√£o do banco de dados...');
  
  if (!checkDatabaseUrl()) {
    console.log('üõ†Ô∏è Criando banco PostgreSQL automaticamente...');
    console.log('‚ö†Ô∏è ATEN√á√ÉO: Esta opera√ß√£o ser√° feita via ferramentas do Replit');
    console.log('üìã Execute manualmente se necess√°rio:');
    console.log('   1. create_postgresql_database_tool');
    console.log('   2. npm run db:push');
    console.log('   3. restart_workflow');
  }

  // Sempre executar db:push para garantir schema atualizado
  if (!runCommand('npm run db:push', 'Aplicando schema do banco de dados')) {
    console.log('‚ö†Ô∏è Falha no db:push - pode ser necess√°rio criar banco primeiro');
  }

  console.log('üéØ AQUECEDOR TURBO PRONTO PARA EXECU√á√ÉO');
  console.log('üì± Funcionalidades dispon√≠veis:');
  console.log('   ‚úÖ Conex√µes WhatsApp via QR Code');
  console.log('   ‚úÖ Agentes IA com ChatGPT');
  console.log('   ‚úÖ Mensagens em tempo real');
  console.log('   ‚úÖ Sistema de deduplica√ß√£o autom√°tica');
  console.log('   ‚úÖ Conversas cont√≠nuas entre agentes');
}

main().catch(console.error);